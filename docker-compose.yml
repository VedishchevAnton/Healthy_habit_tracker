version: '3'

services:
  db:
    image: postgres:14-alpine3.17
    container_name: db_app
    env_file:
      - .env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: redis_app
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - '6379:6379'
    volumes:
      - ./data/cache:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: app
    container_name: app_container
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    command: python manage.py runserver 0.0.0.0:8000


  celery:
    build: .
    container_name: celery_app
    command: celery -A config worker -l INFO --loglevel warning
    volumes:
      - celery_data:/app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_LOG_LEVEL=debug
    healthcheck:
      test: [ "CMD", "celery", "inspect", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3


  celery-beat:
    build: .
    container_name: celery_beat_app
    command: celery -A config beat -l info -S django --loglevel warning
    volumes:
      - celery_beat_data:/app
    depends_on:
      redis:
        condition: service_healthy
      celery:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_LOG_LEVEL=debug

volumes:
  celery_data:
  celery_beat_data:






